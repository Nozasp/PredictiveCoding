import os, PIL
import numpy as np
from PIL import Image
import os
import matplotlib.pyplot as plt

print("Path at terminal when executing this file")
print(os.getcwd() + "\n")

print("This file path, relative to os.getcwd()")
print(__file__ + "\n")


# Access all PNG files in directory
allfiles=os.listdir(os.getcwd())
imlist=[filename for filename in allfiles if  filename[-4:] in [".png",".PNG"]]

plots = []
for i in range(10):
    img = plt.imread(f"{imlist[i]}")
    plots.append(img)


print(imlist)
#print(os.getcwd())

# Compute the average of pixel values across all plots
average_array = np.mean(plots, axis=0)

# Create a new image from the averaged pixel values
blended_image = Image.fromarray((average_array * 255).astype(np.uint8))

# Display or save the blended image
blended_image.show()
# Alternatively, save the image
# blended_image.save("blended_image.png")


"""

# Assuming all images are the same size, get dimensions of first image
w,h=Image.open(imlist[0]).size
N=len(imlist)
print(N)
print(w, h)
# Create a numpy array of floats to store the average (assume RGB images)
arr=numpy.zeros((h,w,4))#.float()#numpy.float
print(arr)
# Build up average pixel intensities, casting each image as an array of floats
for im in imlist:
    imarr=numpy.array(Image.open(im),dtype=float)
    print(imarr.shape)
    arr=arr+imarr/N

# Round values in array and cast as 8-bit integer
arr=numpy.array(numpy.round(arr),dtype=numpy.uint8)

# Generate, save and preview final image
out=Image.fromarray(arr,mode="RGB")
out.save("Average.png")
out.show()




"""